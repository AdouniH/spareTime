{"version":3,"sources":["components/cover.jpg","utils.jsx","components/auth_page.jsx","components/globals/navbar.jsx","components/email.jsx","components/rdv.jsx","components/routing.jsx","reducers.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","server_ip","PrivateRoute","Component","component","rest","useContext","CnxContext","conn","dispatch","useEffect","key","localStorage","getItem","axios","get","headers","Authorization","catch","error","removeItem","render","props","to","ErrorMsg","class","AuthPage","errortext","useState","code","setCode","setError","onSubmit","event","preventDefault","post","then","res","data","token","type","history","push","onChange","target","value","NavBar","className","onClick","EmailSent","EmailExisteDeja","EmailNonValid","Email","document","body","classList","remove","response","email","setEmail","email_sent_status","setEmail_sent_status","Rdv","Routes","exact","path","loginReducer","state","action","setItem","Error","React","createContext","liginItialState","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.d86b3bd9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.1177f598.jpg\";","import React, {useContext, useEffect} from \"react\";\r\nimport {\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport {CnxContext} from './App.js'\r\nimport axios from 'axios';\r\n\r\nconst server_ip = \"https://houssem-adouni.com:8081\"\r\n// const server_ip = \"http://localhost:8000\"\r\n// authentification\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    const { conn, dispatch } = useContext(CnxContext);\r\n    useEffect(() => {\r\n      if (conn){\r\n            var key = localStorage.getItem('token');\r\n            axios.get(server_ip+\"/user/checktoken/\",  { headers: { Authorization: 'token '+ key }})\r\n                  .catch(function (error) {\r\n                        localStorage.removeItem('token');\r\n                        dispatch('disconnect')\r\n          })\r\n            }\r\n        });\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n              conn?\r\n              <Component {...props} />\r\n            : <Redirect to=\"/authentification\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport {PrivateRoute, server_ip}\r\n","import React,  {useState, useContext} from 'react';\r\nimport './style/debug.css';\r\nimport './style/auth_page.css';\r\nimport axios from 'axios';\r\nimport {CnxContext} from '../App.js';\r\nimport {server_ip} from '../utils.jsx'\r\nimport cover from './cover.jpg'\r\n\r\n\r\nfunction ErrorMsg(){\r\n    return(\r\n      <div>\r\n          <label class=\"red_color\">Code incorrecte !&nbsp;</label>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nfunction AuthPage(props) {\r\n  // document.body.classList.add('background-body');\r\n  const {conn, dispatch } = useContext(CnxContext);\r\n\r\n  const [code, setCode] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  var errortext;\r\n  if(error){\r\n      errortext = <ErrorMsg/>\r\n  }\r\n\r\n  function submition(event){\r\n      event.preventDefault();\r\n      axios.post(server_ip+'/user/ptoken/', {code: code})\r\n          .then(res => {\r\n            if (res.data.token){\r\n              dispatch({type: \"connect\", key: res.data.token});\r\n              props.history.push(\"/\");\r\n            }\r\n        })\r\n          .catch( error => {\r\n                setError(true);\r\n            })\r\n      }\r\n\r\n  return (\r\n    <div>\r\nHELLO\r\n        <div></div>\r\n        <div>\r\n        <div>\r\n\r\n            <form onSubmit={submition}>\r\n                <div><span >Veuillez entrer votre code</span></div>\r\n                <div><input onChange={(event) => {setCode(event.target.value); setError(false)}}></input></div>\r\n                <div><button type=\"submit\">Login</button></div>\r\n            </form>\r\n            <div>{errortext}</div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default AuthPage;\r\n","import React, {useContext} from \"react\";\r\nimport {CnxContext} from '../../App.js'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nfunction NavBar(props) {\r\n  const { conn, dispatch } = useContext(CnxContext);\r\n  return (\r\n      <div>\r\n          <div className=\"debugbounding\">\r\n              <ul>\r\n                  <li onClick={() => {dispatch({type: \"disconnect\"})}}>\r\n                      <Link to=\"/\">disconnect</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/rendezvous\">Rdv</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/mail\">mail</Link>\r\n                  </li>\r\n              </ul>\r\n\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, {useState, useContext} from \"react\";\r\nimport {CnxContext} from '../App.js'\r\nimport NavBar from './globals/navbar.jsx'\r\nimport {server_ip} from '../utils.jsx'\r\nimport axios from 'axios';\r\n\r\nfunction EmailSent(props) {\r\n    return(\r\n        <div className=\"debugbounding\"> Email is sent go go go ...  </div>\r\n    )\r\n}\r\n\r\n\r\nfunction EmailExisteDeja(props) {\r\n    return(\r\n        <div className=\"debugbounding\"> Cet Email est déja présent dans ma base de données</div>\r\n    )\r\n}\r\n\r\nfunction EmailNonValid(props) {\r\n    return(\r\n        <div className=\"debugbounding\"> Erreur ! email non sauvegardé</div>\r\n    )\r\n}\r\n\r\n\r\nfunction Email(props) {\r\n  document.body.classList.remove('background-body');\r\n  const {conn, dispatch} = useContext(CnxContext);\r\n  const [email, setEmail] = useState(\"\")\r\n  const [email_sent_status, setEmail_sent_status] = useState(0)\r\n\r\n  var response;\r\n  if (email_sent_status === 1){\r\n       response = <EmailSent/>\r\n  }\r\n  else if (email_sent_status === 2) {\r\n      response = <EmailExisteDeja/>\r\n  }\r\n  else if (email_sent_status === 3) {\r\n      response = <EmailNonValid/>\r\n  }\r\n\r\n  function saveMail(event){\r\n      event.preventDefault();\r\n      axios.post(server_ip+'/mail/',  {email: email}, {headers: {Authorization: 'token '+conn}})\r\n      .then(res => {\r\n        setEmail_sent_status(1)\r\n        setEmail(\"\")\r\n      })\r\n      .catch( error => {\r\n          if(error.response.data.email['0'] === \"mail with this email already exists.\"){\r\n              setEmail_sent_status(2)\r\n          }\r\n          else {\r\n              setEmail_sent_status(3)\r\n          }\r\n        })\r\n  }\r\n\r\n  return (\r\n      <div>\r\n          <NavBar/>\r\n          <div className=\"debugbounding\">\r\n              <form onSubmit={saveMail}>\r\n                  <p>Enter your email, and submit:</p>\r\n                  <input type='email' value={email} onChange={(event) => {setEmail(event.target.value); setEmail_sent_status(0);}}/>\r\n                  <input type='submit'/>\r\n              </form>\r\n              {response}\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Email;\r\n","\r\nimport React from \"react\";\r\nimport './style/debug.css';\r\nimport Navbar from './globals/navbar.jsx'\r\n\r\nfunction Rdv(props) {\r\n  document.body.classList.remove('background-body');\r\n  return (\r\n    <div>\r\n        <Navbar />\r\n        <div className=\"debugbounding\">\r\n          <h1 > rendez vous ... </h1>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rdv;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport AuthPage from './auth_page.jsx';\r\nimport Email from './email.jsx'\r\nimport Rdv from './rdv.jsx'\r\nimport {PrivateRoute} from '../utils.jsx'\r\n\r\n\r\nexport default function Routes(props) {\r\n  // document.body.classList.remove('background-body');\r\n  return (\r\n        <Switch>\r\n            <Route exact path=\"/authentification\" component={AuthPage}/>\r\n            <PrivateRoute exact path='/mail' component={Email} />\r\n            <PrivateRoute exact path='/rendezvous' component={Rdv} />\r\n            <PrivateRoute exact path=\"/\"><Redirect to=\"/mail\" /></PrivateRoute>\r\n        </Switch>\r\n  );\r\n}\r\n","\r\nexport const loginReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'connect':\r\n            localStorage.setItem('token', action.key);\r\n            return action.key;\r\n        case 'disconnect':\r\n            localStorage.removeItem('token');\r\n            return false;\r\n        default: throw new Error('Unexpected action');\r\n  }\r\n};\r\n","import React, {useReducer} from 'react';\nimport './App.css';\nimport Routes from './components/routing.jsx'\nimport {loginReducer} from './reducers.jsx'\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nexport const CnxContext = React.createContext();\nconst liginItialState = localStorage.getItem('token');\n\n\nfunction App() {\n\n  const [conn, dispatch] = useReducer(loginReducer, liginItialState);\n\n  return (\n    <div>\n\n        <Router>\n            <CnxContext.Provider value={{ conn, dispatch }}>\n                <Routes />\n            </CnxContext.Provider>\n        </Router>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}